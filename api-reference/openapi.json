{
  "openapi": "3.0.1",
  "info": {
    "title": "Beliquid API",
    "description": "Beliquid API documentation",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://apiserver.beratrade.io"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/auth": {
      "post": {
        "description": "Authenticates user",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Auth Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotorder": {
      "post": {
        "description": "Place a new order",
        "parameters": [
          {
            "name": "Bliq-Signature",
            "in": "header",
            "description": "Signature generated by signing the payload with `signingKey`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Signer-Address",
            "in": "header",
            "description": "`signingKey` used to generate the signature",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Key",
            "in": "header",
            "description": "`bliq_key` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Secret",
            "in": "header",
            "description": "`bliq_secret` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Auth Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateOrderResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotorder/cancel/{id}": {
      "delete": {
        "description": "Cancels the order whose ID has been passed",
        "parameters": [
          {
            "name": "Bliq-Key",
            "in": "header",
            "description": "`bliq_key` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Secret",
            "in": "header",
            "description": "`bliq_secret` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of order to cancel",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotorder/orders": {
      "get": {
        "description": "Get all orders of the user",
        "parameters": [
          {
            "name": "Bliq-Key",
            "in": "header",
            "description": "`bliq_key` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Secret",
            "in": "header",
            "description": "`bliq_secret` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdersResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/spotorder/fills": {
      "get": {
        "description": "Get all the fills of the user",
        "parameters": [
          {
            "name": "Bliq-Key",
            "in": "header",
            "description": "`bliq_key` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Secret",
            "in": "header",
            "description": "`bliq_secret` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of user fills",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FillsResponse"
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/balances": { 
      "get": {
        "description": "Get the spot balance on Beliquid",
        "parameters": [
          {
            "name": "Bliq-Key",
            "in": "header",
            "description": "`bliq_key` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Secret",
            "in": "header",
            "description": "`bliq_secret` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Spot balances of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketdata/active_markets": { 
      "get": {
        "description": "Get all active markets on Beliquid",
        "parameters": [
          {
            "name": "Bliq-Key",
            "in": "header",
            "description": "`bliq_key` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Secret",
            "in": "header",
            "description": "`bliq_secret` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of active markets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": ["SPOT"]
                      },
                      "maxAmountx18": {
                        "type": "string",
                        "format": "string"
                      },
                      "minAmountx18": {
                        "type": "string",
                        "format": "string"
                      },
                      "baseAssetId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "quoteAssetId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "makerFeeFractionx18": {
                        "type": "string",
                        "format": "string"
                      },
                      "takerFeeFractionx18": {
                        "type": "string",
                        "format": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/marketdata/spot_product_ids": { 
      "get": {
        "description": "Spot product IDs for markets supported by Beliquid",
        "parameters": [
          {
            "name": "Bliq-Key",
            "in": "header",
            "description": "`bliq_key` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Secret",
            "in": "header",
            "description": "`bliq_secret` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Spot product IDs for markets supported by Beliquid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Map of token symbols to their corresponding product IDs",
                  "additionalProperties": {
                    "type": "integer",
                    "description": "Product ID for the token"
                  },
                  "example": {
                    "BERA": 0,
                    "HONEY": 4,
                    "USDC": 2
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/nonce": { 
      "get": {
        "description": "Get the nonce of the user (used during authentication)",
        "parameters": [
          {
            "name": "Bliq-Key",
            "in": "header",
            "description": "`bliq_key` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Bliq-Secret",
            "in": "header",
            "description": "`bliq_secret` obtained during authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current nonce value for the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["body", "message", "status"],
                  "properties": {
                    "body": {
                      "type": "string",
                      "description": "Current nonce value"
                    },
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterUser": {
        "allOf": [
          {
            "required": [
              "signingKey",
              "signingSignature",
              "ethAddress",
              "ethSignature",
              "expiryTs",
              "nonce",
              "chainId"
            ],
            "type": "object",
            "properties": {
              "signingKey": {
                "description": "Any EVM address (can be generated at the time of sending request) which will be used as proxy to sign all requests on behalf of user",
                "type": "string",
                "format": "address"
              },
              "signingSignature": {
                "description": "Signature generated using signingKey address",
                "type": "string",
                "format": "string"
              },
              "ethAddress": {
                "description": "EVM address of the user",
                "type": "string",
                "format": "address"
              },
              "ethSignature": {
                "description": "Signature generated using EVM address",
                "type": "string",
                "format": "string"
              },
              "expiryTs": {
                "description": "Timestamp at which `bliq_key` and `bliq_secret` credentials will expire (in milliseconds). `expiryTs` can be any timestamp 1 week from the current unix timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "nonce": {
                "description": "When the user sends their first request, they start with 0 nonce and for every subsequent request, nonce should be incremented by 1. No two requests sent by the user to beliquid can have the same nonce. User can get the current nonce from [this](/api-reference/endpoint/get_nonce) api",
                "type": "integer",
                "format": "int64"
              },
              "chainId": {
                "description": "Users should use the chain id of ethereum (1) in this field.",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "AuthResponse": {
        "required": [
          "body",
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "bliq_key" : {
                "type": "string",
                "format": "string"
              },
              "bliq_secret" : {
                "type": "string",
                "format": "string"
              },
              "bliq_secret_hash" : {
                "type": "string",
                "format": "string"
              }
            }
          },
          "message": {
            "type": "string",
            "format": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateOrder": {
        "allOf": [
          {
            "required": [
              "marketId",
              "isBuy",
              "orderType",
              "amount",
              "price",
              "expiryTs"
            ],
            "type": "object",
            "properties": {
              "marketId": {
                "description": "ID of the market you want to trade on. Each Market on beliquid has a unique ID. Users can get the list of active markets and their properties [here](/api-reference/endpoint/get_active_markets).",
                "type": "integer",
                "format": "int64"
              },
              "isBuy": {
                "description": "true if user wants to buy the asset and vice versa",
                "type": "boolean",
                "format": "boolean"
              },
              "orderType": {
                "description": "beliquid currently supports LIMIT and MARKET orders",
                "type": "string",
                "enum": ["LIMIT", "MARKET"]
              },
              "amount": {
                "description": "amount of token user wants to trade",
                "type": "string",
                "format": "string"
              },
              "price": {
                "description": "price at which the order has to be executed. that this value should be `0` for MARKET orders",
                "type": "string",
                "format": "string"
              },
              "expiryTs": {
                "description": "timestamp (in milliseconds) at which the order will expire",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "CreateOrderResponse": {
        "required": [
          "body",
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "amount" : {
                "type": "string",
                "format": "string"
              },
              "createdAt" : {
                "type": "string",
                "format": "string"
              },
              "expiryTs" : {
                "type": "integer",
                "format": "int64"
              },
              "id" : {
                "description": "ID of the order which has beenc created. This ID will be useful during order cancellation.",
                "type": "integer",
                "format": "int64"
              },
              "marketSymbol" : {
                "type": "string",
                "format": "string"
              },
              "marketType" : {
                "type": "string",
                "format": "string"
              },
              "pricex18" : {
                "description": "price at which limit order will be executed (will be 0 for market orders) with 18 decimal precision",
                "type": "string",
                "format": "string"
              },
              "side" : {
                "type": "string",
                "enum": ["BUY", "SELL"]
              },
              "status" : {
                "type": "string",
                "enum": ["CANCELLED", "FILLED",  "PARTIAL"]
              },
              "subaccountId" : {
                "description": "EVM address of the user",
                "type": "string",
                "format": "address"
              },
              "totalFilledx18" : {
                "description": "Amount of order filled with 18 decimal precision",
                "type": "string",
                "format": "string"
              },
              "type" : {
                "type": "string",
                "enum": ["MARKET", "LIMIT"]
              },
              "updatedAt" : {
                "type": "string",
                "format": "string"
              }
            }
          },
          "message": {
            "type": "string",
            "format": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CancelOrderResponse": {
        "required": [
          "body",
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Error": {
        "required": [
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OrdersResponse": {
        "required": [
          "body",
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "orders": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "deleted_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "subaccount_id": {
                      "type": "string",
                      "format": "address"
                    },
                    "market_id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "side": {
                      "type": "string",
                      "enum": ["BUY", "SELL"]
                    },
                    "type": {
                      "type": "string",
                      "enum": ["MARKET", "LIMIT"]
                    },
                    "total_filled_x18": {
                      "type": "string",
                      "format": "string"
                    },
                    "expiry_ts": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "status": {
                      "type": "string",
                      "enum": ["CANCELLED", "FILLED", "PARTIAL"]
                    },
                    "timestamp": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "signature": {
                      "type": "string",
                      "format": "string"
                    },
                    "session_key": {
                      "type": "string",
                      "format": "address"
                    },
                    "amount_x18": {
                      "type": "string",
                      "format": "string"
                    },
                    "price_x18": {
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "format": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FillsResponse": {
        "required": [
          "body",
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "fills": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "deleted_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "MarketId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "OrderId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "CounterPartyOrderId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "SubaccountId": {
                      "type": "string",
                      "format": "address"
                    },
                    "Side": {
                      "type": "string",
                      "enum": ["BUY", "SELL"]
                    },
                    "Liquidity": {
                      "type": "string",
                      "enum": ["TAKER", "MAKER"]
                    },
                    "Pricex18": {
                      "type": "string",
                      "format": "string"
                    },
                    "Amountx18": {
                      "type": "string",
                      "format": "string"
                    },
                    "Feex18": {
                      "type": "string",
                      "format": "string"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "format": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BalanceResponse": {
        "required": [
          "body",
          "message",
          "status"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "product_id": {
                  "description": "Each asset on Beliquid has a unique product id. User can access all the available product ids and their corresponding symbols [here](/api-reference/endpoint/get_spot_product_ids)",
                  "type": "integer",
                  "format": "int64"
                },
                "balance_x18": {
                  "description": "Available balance of the token with 18 decimal precision",
                  "type": "string",
                  "format": "string"
                },
                "locked_x18": {
                  "description": "Amount of token locked in open orders with 18 decimal precision",
                  "type": "string",
                  "format": "string"
                }
              }
            },
            "example": {
              "ETH": {
                "product_id": 1,
                "balance_x18": "1000000000000000000",
                "locked_x18": "0"
              },
              "USDC": {
                "product_id": 2,
                "balance_x18": "5000000000000000000000",
                "locked_x18": "1000000000000000000000"
              }
            }
          },
          "message": {
            "type": "string",
            "format": "string"
          },
          "status": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    }
  }
}